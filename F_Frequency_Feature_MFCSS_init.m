function framemfccParams = F_Frequency_Feature_MFCSS_init(windowLength, fs)
framemfccParams.cepstralCoefficients = 13;
framemfccParams.fftSize = round(windowLength / 2);
framemfccParams.lowestFrequency = 133.3333;
framemfccParams.linearFilters = 13;
framemfccParams.linearSpacing = 66.66666666;
framemfccParams.logFilters = 27;
framemfccParams.logSpacing = 1.0711703;
framemfccParams.totalFilters = framemfccParams.linearFilters + ...
    framemfccParams.logFilters;
framemfccParams.freqs = framemfccParams.lowestFrequency + ...
    (0:framemfccParams.linearFilters-1)*framemfccParams.linearSpacing;
framemfccParams.freqs(framemfccParams.linearFilters+1:framemfccParams.totalFilters+2) = ...
    framemfccParams.freqs(framemfccParams.linearFilters) * ...
    framemfccParams.logSpacing.^(1:framemfccParams.logFilters+2);
framemfccParams.lower = framemfccParams.freqs(1:framemfccParams.totalFilters);
framemfccParams.center = framemfccParams.freqs(2:framemfccParams.totalFilters+1);
framemfccParams.upper = framemfccParams.freqs(3:framemfccParams.totalFilters+2);
framemfccParams.mfccFilterWeights = zeros(framemfccParams.totalFilters,framemfccParams.fftSize);
framemfccParams.triangleHeight = 2./(framemfccParams.upper-framemfccParams.lower);
framemfccParams.fftFreqs = (0:framemfccParams.fftSize-1)/framemfccParams.fftSize*fs;

for chan=1:framemfccParams.totalFilters
    
    framemfccParams.mfccFilterWeights(chan,:) = (framemfccParams.fftFreqs > ...
        framemfccParams.lower(chan) & framemfccParams.fftFreqs <= framemfccParams.center(chan)).* ...
        framemfccParams.triangleHeight(chan).*...
        (framemfccParams.fftFreqs-framemfccParams.lower(chan))/...
        (framemfccParams.center(chan)-framemfccParams.lower(chan)) + ...
        (framemfccParams.fftFreqs > framemfccParams.center(chan) & ...
        framemfccParams.fftFreqs < framemfccParams.upper(chan)).* ...
        framemfccParams.triangleHeight(chan).*...
        (framemfccParams.upper(chan)-framemfccParams.fftFreqs)/...
        (framemfccParams.upper(chan)-framemfccParams.center(chan));
end


framemfccParams.mfccDCTMatrix = 1/sqrt(framemfccParams.totalFilters/2)*...
    cos((0:(framemfccParams.cepstralCoefficients-1))' * ...
    (2*(0:(framemfccParams.totalFilters-1))+1) * pi/2/framemfccParams.totalFilters);
framemfccParams.mfccDCTMatrix(1,:) = framemfccParams.mfccDCTMatrix(1,:) * sqrt(2)/2;
end
